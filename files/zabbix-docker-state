#!/usr/bin/env python3
#
# Distributed via ansible - mit.zabbix-agent.package
#
# docker ps --filter "name=x" matches parts of the name, so we filter our own.

# https://www.askpython.com/python/python-command-line-arguments
import argparse
import subprocess

def get_state(state):
    if state == 'exited':
        return 0
    elif state == 'running':
        return 1
    elif state == 'created':
        return 2
    else:
        return 99


def matches(name):
    if args.matching == 'full':
        return name == args.names
    elif args.matching == 'left':
        return name.startswith(args.names)
    elif args.matching == 'right':
        return name.endswith(args.names)
    else:
        raise ValueError("Argument matching must be one of 'full', 'left' or 'right'")

    
parser = argparse.ArgumentParser()
parser.add_argument("names")
parser.add_argument("matching", help="one of 'full', 'left' or 'right'")
args = parser.parse_args()

docker_ps = subprocess.run(['docker', 'ps', '--format', '{{.Names}} {{.State}}'], capture_output=True, text=True)
for line in docker_ps.stdout.splitlines():
    name, state = line.split()
    #print("name={}, state={}".format(name, state))
    if matches(name):
        print(get_state(state))
        break

